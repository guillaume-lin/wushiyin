cmdhistory=["(def  download-count 0)" "(defn inc-download-count\\r\\n  (def download-count (inc download-count)))" "(defn inc-download-count\\r\\n  []\\r\\n  (def download-count (inc download-count)))" "(do (inc-download-count) (str \\"agagin again \!\!\! again\\" download-count))" "(defn response\\r\\n  [req]\\r\\n  (do (inc-download-count) (str \\"agagin again \!\!\!\!\!\!\! again \\" download-count)))" "(response req)" "(response 1)" "(defn count\\r\\n\\"this is the entry point for the app, we will dispatch calls from here\\"\\r\\n[req]\\r\\n  {\\r\\n    \:status 200,\\r\\n    \:headers {\\"content-type\\" \\"text/plain\\"},\\r\\n    \:body  (response req)\\r\\n    })" "(count 1)" "(Integer/parseInt \\"1\\")" "(. getId Thread/currentThread)" "(Thread/currentThread getId)" "(java.lang.Thread/currentThread getId)" "(. getId java.lang.Thread/currentThread)" "(. java.lang.Thread/currentThread getId)" "1" "2" "*in*" "*out*" "(read)" "(write \\"\\")" "(spit \\"t.txt\\" 123)" "(slurp \\"t.txt\\")" "(spit \\"t.txt\\" \\"abc\\")" "(slurp \\"t.txt\\")" "do" "unchecked-add" "fn" "(slurp \\"aa.aa\\")" "(sh \\"pwd\\")" "(use '[clojure.java.shell])" "(sh \\"pwd\\")" "(sh \\"cd\\")" "(sh \\"dir\\")" "(sh \\"\\")" "(sh \\"dos\\")" "(sh)" "(sh \\"cd\\" \\"/\\")" "(sh \\"pwd\\")" "(sh \\"sh\\")" "(sh \\"ls\\")" "(import '[clojure.java.shell \:use 'sh'])" "(import '[clojure.java.shell])" "(sh \\"ls\\")" "(sh \\"pwd\\")" "(import '[clojure.java.shell])" "(sh \\"ls\\")" "(sh \\"pwd\\")" "(sh \\"sh\\")" "(slurp \\"t.txt\\")" "(slurp \\"tt.txt\\")" "(try (slurp \\"tt.txt\\"))" "(try (slurp \\"tt.txt\\") (catch Exception e (str (. e getMessage()))))" "(try (slurp \\"tt.txt\\") (catch Exception e (.getMessage e)))" "(try (slurp \\"tt.txt\\") (catch Exception e 1))" "(defn save-download-count\\r\\n  \\"save download count to file\\"\\r\\n  [file download-count]\\r\\n  (spit file download-count))" "(save-download-count 1)" "(save-download-count \\"t.txt\\" 1)" "(slurp \\"t.txt\\")" "(str 1)"]
eclipse.preferences.version=1
